name: Create Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}
    steps:
      - uses: actions/checkout@v3
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          draft: false
          prerelease: false
          generate_release_notes: true

  build-and-release:
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
          - os: windows-latest
            artifact_name: ROMMend-Windows.zip
            asset_name: ROMMend-Windows-x64.zip
          - os: ubuntu-latest
            artifact_name: ROMMend-Linux.tar.gz
            asset_name: ROMMend-Linux-x64.tar.gz
          - os: macos-latest
            artifact_name: ROMMend-macOS.zip
            asset_name: ROMMend-macOS-x64.zip

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 8.0.x
        
    - name: Restore dependencies
      run: dotnet restore
      
    - name: Build
      run: dotnet build -c Release --no-restore
      
    - name: Publish Windows
      if: matrix.os == 'windows-latest'
      run: |
        dotnet publish -c Release -r win-x64 --self-contained true
        7z a ${{ matrix.artifact_name }} ./bin/Release/net8.0/win-x64/publish/*
      
    - name: Publish Linux
      if: matrix.os == 'ubuntu-latest'
      run: |
        dotnet publish -c Release -r linux-x64 --self-contained true
        tar czf ${{ matrix.artifact_name }} -C ./bin/Release/net8.0/linux-x64/publish .
      
    - name: Publish macOS
      if: matrix.os == 'macos-latest'
      run: |
        dotnet publish -c Release -r osx-x64 --self-contained true
        zip -j ${{ matrix.artifact_name }} ./bin/Release/net8.0/osx-x64/publish/*
      
    - name: Upload Release Asset
      uses: softprops/action-gh-release@v1
      with:
        files: ${{ matrix.artifact_name }}
