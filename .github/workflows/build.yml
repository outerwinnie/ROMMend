name: Build ROMMend

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]
        os: [ubuntu-latest, windows-latest]
        dotnet-version: ['8.0.x']

    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
    
    - name: Install Linux dependencies
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y libx11-dev
        sudo apt-get install -y libxrandr-dev
        sudo apt-get install -y libxinerama-dev
        sudo apt-get install -y libxcursor-dev
        sudo apt-get install -y libxi-dev
        sudo apt-get install -y libgl-dev
    
    - name: Restore dependencies
      run: dotnet restore
    
    - name: Build
      run: dotnet build --configuration ${{ matrix.configuration }} --no-restore
    
    - name: Publish
      run: |
        if [ "$RUNNER_OS" == "Windows" ]; then
          dotnet publish --configuration ${{ matrix.configuration }} --runtime win-x64 --self-contained true -p:PublishSingleFile=true
        else
          dotnet publish --configuration ${{ matrix.configuration }} --runtime linux-x64 --self-contained true -p:PublishSingleFile=true
        fi
      shell: bash
    
    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: ROMMend-${{ matrix.os }}
        path: |
          bin/${{ matrix.configuration }}/net8.0/**/publish/ 